{
  "services": {
    "TestService": {
      "id": "TestService",
      "name": "TestService",
      "packagePath": [
        "testpackage"
      ],
      "filePath": "testpackage/TestService.graphql",
      "sources": [
        "Query",
        "Node",
        "User",
        "Post",
        "SearchResult",
        "UserInput"
      ],
      "directives": null,
      "loaders": null,
      "resolvers": [
        "Query:string"
      ],
      "dependencies": null
    }
  },
  "schema": {
    "queryType": "Query"
  },
  "definitions": {
    "Boolean": {
      "scalar": {
        "name": "Boolean",
        "description": "The Boolean scalar type represents true or false.",
        "mappedToProtoType": "bool",
        "specifiedByURL": "https://spec.graphql.org/October2021/#sec-Boolean"
      }
    },
    "Float": {
      "scalar": {
        "name": "Float",
        "description": "The Float scalar type represents signed double-precision fractional values.",
        "mappedToProtoType": "double",
        "specifiedByURL": "https://spec.graphql.org/October2021/#sec-Float"
      }
    },
    "ID": {
      "scalar": {
        "name": "ID",
        "description": "The ID scalar type represents a unique identifier, often used to refetch an object or as a key for caching.",
        "mappedToProtoType": "string",
        "specifiedByURL": "https://spec.graphql.org/October2021/#sec-ID"
      }
    },
    "Int": {
      "scalar": {
        "name": "Int",
        "description": "The Int scalar type represents non-fractional signed whole numeric values.",
        "mappedToProtoType": "int32",
        "specifiedByURL": "https://spec.graphql.org/October2021/#sec-Int"
      }
    },
    "Node": {
      "interface": {
        "name": "Node",
        "fields": {
          "id": {
            "name": "id",
            "index": 0,
            "args": {},
            "fieldType": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "NAMED",
                "named": "ID"
              }
            }
          }
        },
        "interfaces": {},
        "possibleTypes": [
          "User",
          "Post"
        ]
      }
    },
    "Post": {
      "object": {
        "name": "Post",
        "fields": {
          "content": {
            "name": "content",
            "index": 2,
            "args": {},
            "fieldType": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "NAMED",
                "named": "String"
              }
            },
            "bySource": {
              "sourceField": "content"
            }
          },
          "id": {
            "name": "id",
            "index": 0,
            "args": {},
            "fieldType": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "NAMED",
                "named": "ID"
              }
            },
            "bySource": {
              "sourceField": "id"
            }
          },
          "title": {
            "name": "title",
            "index": 1,
            "args": {},
            "fieldType": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "NAMED",
                "named": "String"
              }
            },
            "bySource": {
              "sourceField": "title"
            }
          }
        },
        "interfaces": {
          "Node": {
            "interface": "Node",
            "index": 0
          }
        },
        "idFields": [
          "id"
        ]
      }
    },
    "Query": {
      "object": {
        "name": "Query",
        "fields": {
          "string": {
            "name": "string",
            "index": 0,
            "args": {},
            "fieldType": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "NAMED",
                "named": "String"
              }
            },
            "byResolver": {
              "resolverId": "Query:string",
              "with": {}
            }
          }
        },
        "interfaces": {},
        "idFields": null
      }
    },
    "SearchResult": {
      "union": {
        "name": "SearchResult",
        "types": {
          "Post": {
            "name": "Post",
            "index": 1
          },
          "User": {
            "name": "User",
            "index": 0
          }
        }
      }
    },
    "String": {
      "scalar": {
        "name": "String",
        "description": "The String scalar type represents textual data, represented as UTF-8 character sequences.",
        "mappedToProtoType": "string",
        "specifiedByURL": "https://spec.graphql.org/October2021/#sec-String"
      }
    },
    "User": {
      "object": {
        "name": "User",
        "fields": {
          "id": {
            "name": "id",
            "index": 0,
            "args": {},
            "fieldType": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "NAMED",
                "named": "ID"
              }
            },
            "bySource": {
              "sourceField": "id"
            }
          },
          "name": {
            "name": "name",
            "index": 1,
            "args": {},
            "fieldType": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "NAMED",
                "named": "String"
              }
            },
            "bySource": {
              "sourceField": "name"
            }
          }
        },
        "interfaces": {
          "Node": {
            "interface": "Node",
            "index": 0
          }
        },
        "idFields": [
          "id"
        ]
      }
    },
    "UserInput": {
      "input": {
        "name": "UserInput",
        "inputValues": {
          "age": {
            "name": "age",
            "index": 1,
            "type": {
              "kind": "NAMED",
              "named": "Int"
            }
          },
          "name": {
            "name": "name",
            "index": 0,
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "NAMED",
                "named": "String"
              }
            }
          }
        }
      }
    }
  },
  "directives": {},
  "loaders": {},
  "resolvers": {
    "Query:string": {
      "id": "Query:string",
      "parent": "Query",
      "field": "string",
      "args": {},
      "returnType": {
        "kind": "NON_NULL",
        "ofType": {
          "kind": "NAMED",
          "named": "String"
        }
      }
    }
  }
}
